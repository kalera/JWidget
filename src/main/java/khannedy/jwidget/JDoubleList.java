/*
 *  Copyright 2011 Eko Kurniawan Khannedy.
 * 
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 * 
 *       http://www.apache.org/licenses/LICENSE-2.0
 * 
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *  under the License.
 */

/*
 * JDoubleList.java
 *
 * Created on Jul 8, 2011, 12:46:12 PM
 */
package khannedy.jwidget;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.ListCellRenderer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Eko Kurniawan Khannedy
 */
public class JDoubleList extends javax.swing.JPanel implements ListSelectionListener, ActionListener {

    private static final long serialVersionUID = 1L;

    private DefaultListModel listModelFrom;

    private DefaultListModel listModelTo;

    /** Creates new form JDoubleList */
    public JDoubleList() {
        initComponents();
        initModels();
        initListeners();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        scrollPaneListFrom = new javax.swing.JScrollPane();
        listFrom = new javax.swing.JList();
        panelButton = new javax.swing.JPanel();
        buttonAdd = new javax.swing.JButton();
        buttonRemove = new javax.swing.JButton();
        buttonRemoveAll = new javax.swing.JButton();
        buttonAddAll = new javax.swing.JButton();
        scrollPaneListTo = new javax.swing.JScrollPane();
        listTo = new javax.swing.JList();

        scrollPaneListFrom.setViewportView(listFrom);

        panelButton.setLayout(new java.awt.GridBagLayout());

        buttonAdd.setText("Add >");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panelButton.add(buttonAdd, gridBagConstraints);

        buttonRemove.setText("< Remove");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        panelButton.add(buttonRemove, gridBagConstraints);

        buttonRemoveAll.setText("<< Remove All");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        panelButton.add(buttonRemoveAll, gridBagConstraints);

        buttonAddAll.setText("Add All >>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panelButton.add(buttonAddAll, gridBagConstraints);

        scrollPaneListTo.setViewportView(listTo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(scrollPaneListFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneListTo, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPaneListFrom, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
            .addComponent(panelButton, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
            .addComponent(scrollPaneListTo, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void initModels() {
        listModelFrom = new DefaultListModel();
        listFrom.setModel(listModelFrom);

        listModelTo = new DefaultListModel();
        listTo.setModel(listModelTo);
    }

    public List<?> getResultValues() {
        List<Object> list = new ArrayList<Object>(0);
        for (int i = 0; i < listModelTo.getSize(); i++) {
            list.add(listModelTo.getElementAt(i));
        }
        return list;
    }

    public void addSourceValue(Object object) {
        listModelFrom.addElement(object);
        fireButtonEnabled();
    }

    public void setSourceValues(Collection<?> collection) {
        listModelFrom.removeAllElements();
        for (Object object : collection) {
            listModelFrom.addElement(object);
        }
        fireButtonEnabled();
    }

    private void initListeners() {
        listTo.getSelectionModel().addListSelectionListener(this);
        listFrom.getSelectionModel().addListSelectionListener(this);

        buttonAdd.addActionListener(this);
        buttonAddAll.addActionListener(this);
        buttonRemove.addActionListener(this);
        buttonRemoveAll.addActionListener(this);
    }

    public void setButtonAddText(String text) {
        buttonAdd.setText(text);
    }

    public String getButtonAddText() {
        return buttonAdd.getText();
    }

    public void setButtonAddAllText(String text) {
        buttonAddAll.setText(text);
    }

    public String getButtonAddAllText() {
        return buttonAddAll.getText();
    }

    public void setButtonRemoveText(String text) {
        buttonRemove.setText(text);
    }

    public String getButtonRemoveText() {
        return buttonRemove.getText();
    }

    public void setButtonRemoveAllText(String text) {
        buttonRemoveAll.setText(text);
    }

    public String getButtonRemoveAllText() {
        return buttonRemoveAll.getText();
    }

    public void setListFromCellRenderer(ListCellRenderer cellRenderer) {
        listFrom.setCellRenderer(cellRenderer);
    }

    public ListCellRenderer getListFromCellRenderer() {
        return listFrom.getCellRenderer();
    }

    public void setListToCellRenderer(ListCellRenderer cellRenderer) {
        listTo.setCellRenderer(cellRenderer);
    }

    public ListCellRenderer getListToCellRenderer() {
        return listTo.getCellRenderer();
    }

    private void setButtonEnabled(boolean add, boolean remove, boolean addAll, boolean removeAll) {
        buttonAdd.setEnabled(add);
        buttonAddAll.setEnabled(addAll);
        buttonRemove.setEnabled(remove);
        buttonRemoveAll.setEnabled(removeAll);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonAddAll;
    private javax.swing.JButton buttonRemove;
    private javax.swing.JButton buttonRemoveAll;
    private javax.swing.JList listFrom;
    private javax.swing.JList listTo;
    private javax.swing.JPanel panelButton;
    private javax.swing.JScrollPane scrollPaneListFrom;
    private javax.swing.JScrollPane scrollPaneListTo;
    // End of variables declaration//GEN-END:variables

    public void valueChanged(ListSelectionEvent e) {
        if (e.getSource() == listTo.getSelectionModel()) {
            fireButtonEnabled();
        } else if (e.getSource() == listFrom.getSelectionModel()) {
            fireButtonEnabled();
        }
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == buttonAdd) {
            for (Object object : listFrom.getSelectedValues()) {
                listModelTo.addElement(object);
            }
            while (listFrom.getSelectedIndex() != -1) {
                listModelFrom.remove(listFrom.getSelectedIndex());
            }
        } else if (e.getSource() == buttonRemove) {
            for (Object object : listTo.getSelectedValues()) {
                listModelFrom.addElement(object);
            }
            while (listTo.getSelectedIndex() != -1) {
                listModelTo.remove(listTo.getSelectedIndex());
            }
        } else if (e.getSource() == buttonAddAll) {
            while (!listModelFrom.isEmpty()) {
                listModelTo.addElement(listModelFrom.remove(0));
            }
        } else if (e.getSource() == buttonRemoveAll) {
            while (!listModelTo.isEmpty()) {
                listModelFrom.addElement(listModelTo.remove(0));
            }
        }
        fireButtonEnabled();
    }

    protected void fireButtonEnabled() {
        boolean add = listFrom.getSelectedValue() != null;
        boolean remove = listTo.getSelectedValue() != null;
        boolean addAll = listFrom.getModel().getSize() != 0;
        boolean removeAll = listTo.getModel().getSize() != 0;
        setButtonEnabled(add, remove, addAll, removeAll);
    }
}
